%% Classification
clf
mu = 2;% The pattern
nDigits = 10000;
classification = zeros(1,nDigits);
numTrainFiles = nDigits/2;

testSet = LoadMNIST2(); 


figure;
perm = randperm(10000,20);  
for i = 1:20
    subplot(4,5,i);
    imshow(testSet(:,:,:,perm(i)));
end
%%
number = testSet(:,:,1,:)
%labelCount = countEachLabel(testSet(:,:,:,1))
%%
[imdsTrain,imdsValidation] = splitEachLabel(testSet,numTrainFiles,'randomize');

layers = [
    imageInputLayer([28 28 1])
    
    convolution2dLayer(3,8,'Padding','same')
    batchNormalizationLayer
    reluLayer
    
    maxPooling2dLayer(2,'Stride',2)
    
    convolution2dLayer(3,16,'Padding','same')
    batchNormalizationLayer
    reluLayer
    
    maxPooling2dLayer(2,'Stride',2)
    
    convolution2dLayer(3,32,'Padding','same')
    batchNormalizationLayer
    reluLayer
    
    fullyConnectedLayer(10)
    softmaxLayer
    classificationLayer];


options = trainingOptions('sgdm', ...
    'InitialLearnRate',0.01, ...
    'MaxEpochs',4, ...
    'Shuffle','every-epoch', ...
    'ValidationData',imdsValidation, ...
    'ValidationFrequency',30, ...
    'Verbose',false, ...
    'Plots','training-progress');

net = trainNetwork(imdsTrain,layers,options);
YPred = classify(net,imdsValidation);
YValidation = imdsValidation.Labels;

accuracy = sum(YPred == YValidation)/numel(YValidation)

%csvwrite('classifications.csv',class)
